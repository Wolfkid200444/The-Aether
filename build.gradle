plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'io.github.0ffz.github-packages' version '[1,2)'
    id 'com.matthewprenger.cursegradle' version '[1.4,1.5)'
    id 'com.modrinth.minotaur' version '[2,3)'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = "${minecraft_version}-${mod_version}-fabric"
group = mod_group

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

loom {
    accessWidenerPath = file('src/main/resources/aether.accesswidener')

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

fabricApi {
    configureDataGeneration {
        modId = "alloy_forgery"
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {
    exclude '.cache/'
}

//configurations {
//    runtimeClasspath.extendsFrom localRuntime
//}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.property("neogradle.subsystems.parchment.minecraftVersion")}:${project.property("neogradle.subsystems.parchment.mappingsVersion")}@zip")
    }

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixin_extra_version}"))
    include("io.github.llamalad7:mixinextras-fabric:${project.mixin_extra_version}:slim")

    modImplementation("me.shedaniel:mm:2.4.1")

    include modImplementation("com.aetherteam.nitrogen:nitrogen_internals:${project.nitrogen_version}")
    include modImplementation("com.aetherteam.cumulus:cumulus_menus:${project.cumulus_version}")

    include modImplementation("io.wispforest:accessories-fabric:${project.accessories_version}+${project.minecraft_version}")

    modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forge_config_version}"

    modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}")

    modLocalRuntime "maven.modrinth:debugutils:1.21-${project.debugutils_version}"

    modCompileOnly "mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}"
    modCompileOnly "mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}"

    modCompileOnly "maven.modrinth:jade:${project.jade_version}"
    modCompileOnly "maven.modrinth:lootr:${project.lootr_version}"

//    implementation fileTree(dir: 'libs', include: '*.jar')

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"
    modCompileOnly "dev.architectury:architectury-fabric:${architectury_version}"
}

repositories {
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://gitlab.com/api/v4/projects/21830712/packages/maven" }
    maven { url = "https://maven.wispforest.io" }
    maven { url = "https://maven.wispforest.io/releases" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.fabricmc.net" }
    maven { url = "https://maven.su5ed.dev/releases" }
    maven { url = "https://maven.architectury.dev/" }
    maven githubPackage.invoke("The-Aether-Team/Nitrogen")
    maven githubPackage.invoke("The-Aether-Team/Cumulus")
    mavenLocal()
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.architectury.dev/" }
    maven { url = "https://maven.terraformersmc.com/" }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        mod_id                 : mod_id,
        mod_name               : mod_name,
        mod_version            : mod_version,
        mod_license            : mod_license,
        mod_url                : mod_url,
        mod_tracker            : mod_tracker,
        mod_credits            : mod_credits,
        mod_authors            : mod_authors,
        mod_description        : mod_description,
        minecraft_version      : minecraft_version,
        minecraft_version_range: minecraft_version_range,
        fabric_version         : fabric_version,
        fabric_version_range   : fabric_version_range,
        fabric_loader_version_range : fabric_loader_version_range
    ]
    inputs.properties replaceProperties

    filesMatching(['fabric.mod.json']) {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.compilerArgs << "-Xmaxerrs" << "9000"
}

tasks.register('sourceJar', Jar) {
    dependsOn 'classes'
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

compileJava {
    options.incremental = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            artifact project.tasks.jar
            artifact project.sourceJar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/The-Aether-Team/The-Aether"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

curseforge {
    project {
        apiKey = System.getenv("CURSEFORGE_TOKEN")
        id = "${curseforge_id}"
        releaseType = "${version_type}"
        changelog = file("$rootDir/docs/CHANGELOG.md")
        changelogType = "markdown"
        addGameVersion("${minecraft_version}")
        addGameVersion("NeoForge")
        mainArtifact(tasks.jar) {
            displayName = "${project.mod_name} - ${version}"
            relations {
                embeddedLibrary "accessories"
                embeddedLibrary "cumulus"
            }
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "${modrinth_id}"
    versionNumber = "${version}"
    versionType = "${version_type}"
    versionName = "${mod_name} - ${version}"
    changelog = new File("$rootDir/docs/CHANGELOG.md").text
    uploadFile = tasks.jar
    gameVersions = ["${minecraft_version}"]
    loaders = ["neoforge"]
    dependencies {
        embedded.version "accessories", "${project.accessories_version}+${project.minecraft_version}"
        embedded.version "cumulus", "${project.cumulus_version}"
    }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
